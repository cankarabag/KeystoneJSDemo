import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';
import '@babel/runtime/helpers/esm/classCallCheck';
import 'lodash.isequal';
import FieldController from '../Controller/dist/fields.esm.js';
import { format } from 'date-fns';

class DateTimeController extends FieldController {
  constructor() {
    super(...arguments);

    _defineProperty(this, "getFilterGraphQL", _ref => {
      let {
        type,
        value
      } = _ref;
      const key = type === 'is' ? "".concat(this.path) : "".concat(this.path, "_").concat(type);
      return "".concat(key, ": \"").concat(value, "\"");
    });

    _defineProperty(this, "getFilterLabel", _ref2 => {
      let {
        label
      } = _ref2;
      return "".concat(this.label, " ").concat(label.toLowerCase());
    });

    _defineProperty(this, "formatFilter", _ref3 => {
      let {
        label,
        value
      } = _ref3;
      const formatConfig = this.config.format;
      let formattedValue = value;

      if (formatConfig) {
        formattedValue = format(value, formatConfig);
      }

      return "".concat(this.getFilterLabel({
        label
      }), ": \"").concat(formattedValue, "\"");
    });

    _defineProperty(this, "serialize", data => {
      let value = data[this.path];

      if (typeof value !== 'string') {
        return null;
      }

      return value.trim() || null;
    });

    _defineProperty(this, "getFilterTypes", () => [{
      type: 'is',
      label: 'Is exactly',
      getInitialValue: () => ''
    }, {
      type: 'not',
      label: 'Is not exactly',
      getInitialValue: () => ''
    }, {
      type: 'gt',
      label: 'Is after',
      getInitialValue: () => ''
    }, {
      type: 'lt',
      label: 'Is before',
      getInitialValue: () => ''
    }, {
      type: 'gte',
      label: 'Is after or equal to',
      getInitialValue: () => ''
    }, {
      type: 'lte',
      label: 'Is before or equal to',
      getInitialValue: () => ''
    } // QUESTION: should we support "in" and "not_in" filters for DateTime?
    // What does the UI look like for that.
    ]);
  }

}

export default DateTimeController;
