'use strict';

function _interopDefault(ex) {
  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
}

var _defineProperty = _interopDefault(require("@babel/runtime/helpers/defineProperty"));

var React = require('react');

var React__default = _interopDefault(React);

var input = require('@arch-ui/input');

class TextFilterView extends React.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "valueToString", value => {
      // Make the value a string to prevent loss of accuracy and precision.
      if (typeof value === 'string') {
        return value;
      } else if (typeof value === 'number') {
        return String(value);
      } else {
        // If it is neither string nor number then it must be empty.
        return '';
      }
    });

    _defineProperty(this, "handleChange", event => {
      const value = event.target.value;
      this.props.onChange(value.replace(/[^0-9.,]+/g, ''));
    });
  }

  render() {
    const {
      filter,
      field,
      innerRef,
      value
    } = this.props;
    if (!filter) return null;
    const placeholder = field.getFilterLabel(filter);
    return React__default.createElement(input.Input, {
      onChange: this.handleChange,
      ref: innerRef,
      placeholder: placeholder,
      value: this.valueToString(value)
    });
  }

}

exports.default = TextFilterView;
