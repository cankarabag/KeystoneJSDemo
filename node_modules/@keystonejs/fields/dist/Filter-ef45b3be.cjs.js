'use strict';

function _interopDefault(ex) {
  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
}

var _defineProperty = _interopDefault(require("@babel/runtime/helpers/defineProperty"));

require("@babel/runtime/helpers/objectWithoutProperties");

require('@emotion/core');

var React = require('react');

var React__default = _interopDefault(React);

require("@babel/runtime/helpers/extends");

require('@arch-ui/select');

require("@babel/runtime/helpers/taggedTemplateLiteral");

require('@apollo/react-hooks');

require('graphql-tag');

require('react-select');

require('intersection-observer');

var RelationshipSelect = require('./RelationshipSelect-61f66544.cjs.js');

const EventCatcher = _ref => {
  let {
    children
  } = _ref;
  return React__default.createElement("div", {
    onClick: e => {
      e.preventDefault();
      e.stopPropagation();
    }
  }, children);
};

class RelationshipFilterView extends React.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "handleChange", option => {
      const {
        onChange
      } = this.props;

      if (option === null) {
        onChange(null);
      } else {
        const {
          value
        } = option;

        if (value) {
          onChange(value.id);
        }
      }
    });
  }

  render() {
    const {
      filter,
      field,
      value
    } = this.props;
    if (!filter) return null;
    const htmlID = "ks-input-".concat(field.path);
    return React__default.createElement(EventCatcher, null, React__default.createElement(RelationshipSelect.RelationshipSelect, {
      field: field,
      renderContext: null,
      htmlID: htmlID,
      onChange: this.handleChange,
      value: value,
      isMulti: false
    }));
  }

}

exports.default = RelationshipFilterView;
