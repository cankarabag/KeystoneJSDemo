'use strict';

function _interopDefault(ex) {
  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
}

require("@babel/runtime/helpers/objectWithoutProperties");

require('@emotion/core');

require("@babel/runtime/helpers/extends");

var utils = require('./utils-29e2a896.cjs.js');

require('@arch-ui/theme');

require('@arch-ui/color-utils');

require('@arch-ui/tooltip');

require('@arch-ui/typography');

var toolbarComponents = require('./toolbar-components-f0fc99c4.cjs.js');

var React = require('react');

var React__default = _interopDefault(React);

var paragraph = require('./paragraph-d4d0e6d8.cjs.js');

let type = 'heading';

function ToolbarElement(_ref) {
  let {
    editor,
    editorState
  } = _ref;
  return React.createElement(toolbarComponents.ToolbarButton, {
    icon: React.createElement("span", {
      "aria-hidden": true
    }, "H"),
    label: "Heading",
    isActive: utils.hasBlock(editorState, type),
    onClick: () => {
      if (utils.hasBlock(editorState, type)) {
        editor.setBlocks({
          type: paragraph.type
        });
      } else {
        editor.setBlocks({
          type: type
        });
      }

      editor.focus();
    }
  });
}

function Node(_ref2) {
  let {
    attributes,
    children
  } = _ref2;
  return React.createElement("h2", attributes, children);
}

let getPlugins = () => [{
  onKeyDown(event, editor, next) {
    // make it so when you press enter after typing a heading,
    // the block type will change to a paragraph
    if (event.keyCode === 13 && editor.value.blocks.every(block => block.type === type)) {
      editor.splitBlock().setBlocks(paragraph.type);
      return;
    }

    next();
  }

}];

exports.Node = Node;
exports.ToolbarElement = ToolbarElement;
exports.getPlugins = getPlugins;
exports.type = type;
