import '@babel/runtime/helpers/esm/objectWithoutProperties';
import { jsx } from '@emotion/core';
import _extends from '@babel/runtime/helpers/esm/extends';
import { h as hasAncestorBlock } from './utils-6cbc3f1d.esm.js';
import { QuoteIcon } from '@arch-ui/icons';
import '@arch-ui/theme';
import '@arch-ui/color-utils';
import '@arch-ui/tooltip';
import '@arch-ui/typography';
import { T as ToolbarButton } from './toolbar-components-f779486c.esm.js';
let type = 'blockquote';

function ToolbarElement(_ref) {
  let {
    editor,
    editorState
  } = _ref;
  let hasBlockquote = hasAncestorBlock(editorState, type);
  return jsx(ToolbarButton, {
    isActive: hasBlockquote,
    icon: jsx(QuoteIcon, null),
    label: "Blockquote",
    onClick: () => {
      if (hasBlockquote) {
        editor.unwrapBlock(type);
      } else {
        editor.wrapBlock(type);
      }

      editor.focus();
    }
  });
}

function Node(_ref2) {
  let {
    attributes,
    children
  } = _ref2;
  return jsx("blockquote", _extends({}, attributes, {
    css: {
      borderLeft: '4px solid #eee',
      color: '#666',
      fontStyle: 'italic',
      margin: 0,
      marginBottom: '1em',
      paddingLeft: '1em'
    }
  }), children);
}

export { Node, ToolbarElement, type };
