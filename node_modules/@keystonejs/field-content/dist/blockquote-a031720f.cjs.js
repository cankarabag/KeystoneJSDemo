'use strict';

function _interopDefault(ex) {
  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
}

require("@babel/runtime/helpers/objectWithoutProperties");

var core = require('@emotion/core');

var _extends = _interopDefault(require("@babel/runtime/helpers/extends"));

var utils = require('./utils-29e2a896.cjs.js');

var icons = require('@arch-ui/icons');

require('@arch-ui/theme');

require('@arch-ui/color-utils');

require('@arch-ui/tooltip');

require('@arch-ui/typography');

var toolbarComponents = require('./toolbar-components-f0fc99c4.cjs.js');

let type = 'blockquote';

function ToolbarElement(_ref) {
  let {
    editor,
    editorState
  } = _ref;
  let hasBlockquote = utils.hasAncestorBlock(editorState, type);
  return core.jsx(toolbarComponents.ToolbarButton, {
    isActive: hasBlockquote,
    icon: core.jsx(icons.QuoteIcon, null),
    label: "Blockquote",
    onClick: () => {
      if (hasBlockquote) {
        editor.unwrapBlock(type);
      } else {
        editor.wrapBlock(type);
      }

      editor.focus();
    }
  });
}

function Node(_ref2) {
  let {
    attributes,
    children
  } = _ref2;
  return core.jsx("blockquote", _extends({}, attributes, {
    css: {
      borderLeft: '4px solid #eee',
      color: '#666',
      fontStyle: 'italic',
      margin: 0,
      marginBottom: '1em',
      paddingLeft: '1em'
    }
  }), children);
}

exports.Node = Node;
exports.ToolbarElement = ToolbarElement;
exports.type = type;
