import _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';
import { jsx } from '@emotion/core';
import _extends from '@babel/runtime/helpers/esm/extends';
import { gridSize, colors } from '@arch-ui/theme';
import { darken, lighten } from '@arch-ui/color-utils';
import Tooltip from '@arch-ui/tooltip';
import { A11yText } from '@arch-ui/typography';

let ToolbarButton = _ref => {
  let {
    isActive,
    label,
    icon,
    as: Tag = 'button',
    tooltipPlacement = 'top'
  } = _ref,
      props = _objectWithoutProperties(_ref, ["isActive", "label", "icon", "as", "tooltipPlacement"]);

  return jsx(Tooltip, {
    placement: tooltipPlacement,
    css: {
      margin: gridSize * 2
    },
    content: label
  }, ref => jsx(Tag, _extends({}, Tag === 'button' ? {
    type: 'button'
  } : null, {
    css: {
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      backgroundColor: 'transparent',
      border: 0,
      cursor: 'pointer',
      color: isActive ? colors.primary : 'white',
      ':hover,:focus': {
        color: isActive ? darken(colors.primary, 10) : lighten(colors.primary, 40)
      },
      ':active': {
        color: isActive ? darken(colors.primary, 25) : lighten(colors.primary, 10)
      },
      fontSize: 16,
      outline: 'none'
    },
    ref: ref
  }, props), icon, jsx(A11yText, null, label)));
};

export { ToolbarButton as T };
