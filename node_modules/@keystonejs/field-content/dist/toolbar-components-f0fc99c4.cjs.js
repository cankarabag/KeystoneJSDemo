'use strict';

function _interopDefault(ex) {
  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
}

var _objectWithoutProperties = _interopDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var core = require('@emotion/core');

var _extends = _interopDefault(require("@babel/runtime/helpers/extends"));

var theme = require('@arch-ui/theme');

var colorUtils = require('@arch-ui/color-utils');

var Tooltip = _interopDefault(require('@arch-ui/tooltip'));

var typography = require('@arch-ui/typography');

let ToolbarButton = _ref => {
  let {
    isActive,
    label,
    icon,
    as: Tag = 'button',
    tooltipPlacement = 'top'
  } = _ref,
      props = _objectWithoutProperties(_ref, ["isActive", "label", "icon", "as", "tooltipPlacement"]);

  return core.jsx(Tooltip, {
    placement: tooltipPlacement,
    css: {
      margin: theme.gridSize * 2
    },
    content: label
  }, ref => core.jsx(Tag, _extends({}, Tag === 'button' ? {
    type: 'button'
  } : null, {
    css: {
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      backgroundColor: 'transparent',
      border: 0,
      cursor: 'pointer',
      color: isActive ? theme.colors.primary : 'white',
      ':hover,:focus': {
        color: isActive ? colorUtils.darken(theme.colors.primary, 10) : colorUtils.lighten(theme.colors.primary, 40)
      },
      ':active': {
        color: isActive ? colorUtils.darken(theme.colors.primary, 25) : colorUtils.lighten(theme.colors.primary, 10)
      },
      fontSize: 16,
      outline: 'none'
    },
    ref: ref
  }, props), icon, core.jsx(typography.A11yText, null, label)));
};

exports.ToolbarButton = ToolbarButton;
