export declare const getSessionsState: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getSelectedSession: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getSelectedSessionId: (state: any) => any;
export declare const getSelectedSessionIdFromRoot: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getScrollTop: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getEndpoint: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getQuery: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getFile: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getVariables: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getResponses: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getOperationName: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getQueryRunning: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getSubscriptionActive: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getOperations: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getVariableToType: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getQueryTypes: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getDate: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getHasMutation: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getHasSubscription: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getHasQuery: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getIsFile: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getStarred: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getName: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getFilePath: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getSelectedUserToken: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getHeaders: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getHasChanged: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getAbsolutePath: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getIsSettingsTab: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getIsConfigTab: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getCurrentQueryStartTime: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getCurrentQueryEndTime: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getIsReloadingSchema: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getIsPollingSchema: import("reselect").OutputSelector<any, boolean, (res1: any, res2: any) => boolean>;
export declare const getResponseExtensions: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getQueryVariablesActive: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getEndpointUnreachable: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getEditorFlex: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getVariableEditorOpen: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getVariableEditorHeight: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getIsExtensionsDrawerOpen: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getIsTracingActive: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getResponseTracingHeight: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getDocExplorerWidth: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getNextQueryStartTime: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getTracingSupported: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getIsQueryPlanSupported: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getTabWidth: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getUseTabs: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getHeadersCount: import("reselect").OutputSelector<any, number, (res: any) => number>;
export declare const getParsedHeaders: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare function getParsedHeadersFromSession(headers: any): any;
export declare const getParsedVariables: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare function getParsedVariablesFromSession(session: any): any;
export declare const getTracing: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getQueryPlan: import("reselect").OutputSelector<any, any, (res: any) => any>;
export declare const getSessionsArray: import("reselect").OutputSelector<any, any, (res: any) => any>;
