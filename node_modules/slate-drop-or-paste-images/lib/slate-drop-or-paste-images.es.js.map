{"version":3,"file":"slate-drop-or-paste-images.es.js","sources":["../src/data-uri-to-blob.js","../src/image-to-data-uri.js","../src/load-image-file.js","../../../node_modules/rollup-plugin-node-builtins/src/es6/path.js","../src/index.js"],"sourcesContent":["/**\n * Return a `Blob` for the given data `uri`.\n *\n * Copied from: https://github.com/component/data-uri-to-blob/blob/master/index.js\n *\n * @param {String} uri\n * @return {Blob}\n */\n\nfunction dataUriToBlob(uri) {\n  const data = uri.split(',')[1]\n  const bytes = atob(data)\n  const buffer = new window.ArrayBuffer(bytes.length)\n  let array = new window.Uint8Array(buffer)\n\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i)\n  }\n\n  if (!hasArrayBufferView()) {\n    array = buffer\n  }\n\n  const blob = new Blob([array], { type: mime(uri) })\n\n  // COMPAT: ???\n  blob.slice = blob.slice || blob.webkitSlice\n\n  return blob\n}\n\n/**\n * Return the mime type of a data `uri`.\n *\n * @param {String} uri\n * @return {String}\n */\n\nfunction mime(uri) {\n  return uri.split('')[0].slice(5)\n}\n\n/**\n * Check if the environment suppoers `ArrayBufferView`.\n *\n * @return {Boolean}\n */\n\nfunction hasArrayBufferView() {\n  return new Blob([new window.Uint8Array(100)]).size == 100\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default dataUriToBlob\n","/**\n * Convert an <img> source `url` to a data URI and `callback(err, uri)`.\n *\n * @param {String} url\n * @param {Function} callback\n */\n\nfunction srcToDataUri(url, callback) {\n  const canvas = window.document.createElement('canvas')\n  const img = window.document.createElement('img')\n\n  if (!canvas.getContext) {\n    return setTimeout(callback, 0, new Error('Canvas is not supported.'))\n  }\n\n  img.onload = () => {\n    const ctx = canvas.getContext('2d')\n    canvas.width = img.width\n    canvas.height = img.height\n    ctx.drawImage(img, 0, 0)\n    const dataUri = canvas.toDataURL('image/png')\n    callback(null, dataUri)\n  }\n\n  img.ononerror = () => {\n    callback(new Error('Failed to load image.'))\n  }\n\n  img.setAttribute('crossOrigin', 'anonymous')\n  img.src = url\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default srcToDataUri\n","import dataUriToBlob from './data-uri-to-blob'\nimport isDataUri from 'is-data-uri'\nimport imageToDataUri from './image-to-data-uri'\n\n/**\n * Load an image file from a src `url`.\n *\n * @param {String} url\n * @param {Function} callback\n */\n\nfunction loadImageFile(url, callback) {\n  if (isDataUri(url)) {\n    const file = dataUriToBlob(url)\n    setTimeout(() => {\n      callback(null, file)\n    })\n  } else {\n    imageToDataUri(url, (err, uri) => {\n      const file = dataUriToBlob(uri)\n      callback(err, file)\n    })\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default loadImageFile\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexport function resolve() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : '/';\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexport function normalize(path) {\n  var isPathAbsolute = isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isPathAbsolute).join('/');\n\n  if (!path && !isPathAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexport function isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\n// posix version\nexport function join() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n}\n\n\n// path.relative(from, to)\n// posix version\nexport function relative(from, to) {\n  from = resolve(from).substr(1);\n  to = resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\nexport var sep = '/';\nexport var delimiter = ':';\n\nexport function dirname(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\nexport function basename(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n}\n\n\nexport function extname(path) {\n  return splitPath(path)[3];\n}\nexport default {\n  extname: extname,\n  basename: basename,\n  dirname: dirname,\n  sep: sep,\n  delimiter: delimiter,\n  relative: relative,\n  join: join,\n  isAbsolute: isAbsolute,\n  normalize: normalize,\n  resolve: resolve\n};\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b' ?\n    function (str, start, len) { return str.substr(start, len) } :\n    function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","import Promise from 'es6-promise'\nimport isImage from 'is-image'\nimport isUrl from 'is-url'\nimport logger from 'slate-dev-logger'\nimport loadImageFile from './load-image-file'\nimport { extname } from 'path'\nimport { getEventTransfer, getEventRange } from 'slate-react'\n\n/**\n * Insert images on drop or paste.\n *\n * @param {Object} options\n *   @property {Function} insertImage\n *   @property {Array} extensions (optional)\n * @return {Object} plugin\n */\n\nfunction DropOrPasteImages(options = {}) {\n  let { insertImage, extensions } = options\n\n  if (options.applyTransform) {\n    logger.deprecate(\n      '0.6.0',\n      'The `applyTransform` argument to `slate-drop-or-paste-images` has been renamed to `insertImage` instead.'\n    )\n    insertImage = options.applyTransform\n  }\n\n  if (!insertImage) {\n    throw new Error('You must supply an `insertImage` function.')\n  }\n\n  /**\n   * Check file extension against user-defined options.\n   *\n   * @param {Type} string\n   * @return {Boolean}\n   */\n\n  function matchExt(type) {\n    let accepted = false\n\n    for (const ext of extensions) {\n      if (type.includes(ext)) accepted = true\n    }\n\n    return accepted\n  }\n\n  /**\n   * Apply the change for a given file and update the editor with the result.\n   *\n   * @param {Change} change\n   * @param {Blob} file\n   * @return {Promise}\n   */\n\n  function asyncApplyChange(change, file) {\n    const { editor } = change\n\n    return Promise.resolve(insertImage(change, file)).then(() => {\n      editor.onChange(change)\n    })\n  }\n\n  /**\n   * On drop or paste.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Function} next\n   * @return {State}\n   */\n\n  function onInsert(event, change, next) {\n    const { editor } = change\n    const transfer = getEventTransfer(event)\n    const range = getEventRange(event, editor)\n\n    switch (transfer.type) {\n      case 'files':\n        return onInsertFiles(event, change, next, transfer, range)\n      case 'html':\n        return onInsertHtml(event, change, next, transfer, range)\n      case 'text':\n        return onInsertText(event, change, next, transfer, range)\n      default:\n        return next()\n    }\n  }\n\n  /**\n   * On drop or paste files.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Function} next\n   * @param {Object} transfer\n   * @param {Range} range\n   * @return {Boolean}\n   */\n\n  function onInsertFiles(event, change, next, transfer, range) {\n    const { files } = transfer\n\n    for (const file of files) {\n      if (extensions) {\n        const type = file.type\n        const [, ext] = type.split('/')\n        if (!matchExt(ext)) continue\n      }\n\n      if (range) {\n        change.select(range)\n      }\n\n      asyncApplyChange(change, file)\n    }\n  }\n\n  /**\n   * On drop or paste html.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Function} next\n   * @param {Object} transfer\n   * @param {Range} range\n   * @return {Boolean}\n   */\n\n  function onInsertHtml(event, change, next, transfer, range) {\n    const { editor } = change\n    const { html } = transfer\n    const parser = new DOMParser()\n    const doc = parser.parseFromString(html, 'text/html')\n    const body = doc.body\n    const firstChild = body.firstChild\n    if (firstChild.nodeName.toLowerCase() != 'img') return next()\n\n    const src = firstChild.src\n\n    if (extensions) {\n      const ext = extname(src).slice(1)\n      if (!matchExt(ext)) return next()\n    }\n\n    loadImageFile(src, (err, file) => {\n      if (err) return\n\n      editor.change(c => {\n        if (range) {\n          c.select(range)\n        }\n\n        asyncApplyChange(c, file)\n      })\n    })\n  }\n\n  /**\n   * On drop or paste text.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Function} next\n   * @param {Object} transfer\n   * @param {Range} range\n   * @return {Boolean}\n   */\n\n  function onInsertText(event, change, next, transfer, range) {\n    const { editor } = change\n    const { text } = transfer\n    if (!isUrl(text)) return next()\n    if (!isImage(text)) return next()\n\n    loadImageFile(text, (err, file) => {\n      if (err) return\n\n      editor.change(c => {\n        if (range) {\n          c.select(range)\n        }\n\n        asyncApplyChange(c, editor, file)\n      })\n    })\n  }\n\n  /**\n   * Return the plugin.\n   *\n   * @type {Object}\n   */\n\n  return {\n    onDrop: onInsert,\n    onPaste: onInsert,\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default DropOrPasteImages\n"],"names":["dataUriToBlob","uri","data","split","bytes","atob","buffer","window","ArrayBuffer","length","array","Uint8Array","i","charCodeAt","hasArrayBufferView","blob","Blob","type","mime","slice","webkitSlice","size","srcToDataUri","url","callback","canvas","document","createElement","img","getContext","setTimeout","Error","onload","ctx","width","height","drawImage","dataUri","toDataURL","ononerror","setAttribute","src","loadImageFile","isDataUri","file","err","DropOrPasteImages","options","insertImage","extensions","applyTransform","deprecate","matchExt","accepted","ext","includes","asyncApplyChange","change","editor","Promise","resolve","then","onChange","onInsert","event","next","transfer","getEventTransfer","range","getEventRange","onInsertFiles","onInsertHtml","onInsertText","files","select","html","parser","DOMParser","doc","parseFromString","body","firstChild","nodeName","toLowerCase","extname","c","text","isUrl","isImage"],"mappings":"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"}