'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _extends = _interopDefault(require('@babel/runtime/helpers/extends'));
var _objectWithoutProperties = _interopDefault(require('@babel/runtime/helpers/objectWithoutProperties'));
var core = require('@emotion/core');
var theme = require('@arch-ui/theme');

// Card
// ==============================

const Card = (_ref) => {
  let {
    as: Tag,
    elevation,
    isInteractive,
    isPadded
  } = _ref,
      props = _objectWithoutProperties(_ref, ["as", "elevation", "isInteractive", "isPadded"]);

  const shadow = theme.shadows[elevation];
  return core.jsx(Tag, _extends({
    css: {
      background: 'white',
      borderRadius: theme.borderRadius,
      boxShadow: shadow,
      padding: isPadded ? theme.gridSize * 2 : null,
      transition: "box-shadow 111ms ease-out, transform 111ms ease-out",
      ':hover': isInteractive ? {
        boxShadow: theme.shadows[elevation + 1],
        transform: 'translateY(-2px)'
      } : null,
      ':active': isInteractive ? {
        boxShadow: shadow,
        transform: 'none'
      } : null
    }
  }, props));
};
Card.defaultProps = {
  as: 'div',
  elevation: 0,
  isPadded: true
}; // ==============================
// Canvas
// ==============================

const Canvas = (_ref2) => {
  let {
    as: Tag,
    isPadded
  } = _ref2,
      props = _objectWithoutProperties(_ref2, ["as", "isPadded"]);

  return core.jsx(Tag, _extends({
    css: {
      background: "rgba(9, 30, 66, 0.04)",
      borderRadius: theme.borderRadius * 2,
      padding: isPadded ? theme.gridSize : null
    }
  }, props));
};
Canvas.defaultProps = {
  as: 'div',
  isPadded: true
};

exports.Canvas = Canvas;
exports.Card = Card;
