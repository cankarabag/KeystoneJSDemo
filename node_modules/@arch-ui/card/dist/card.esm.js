import _extends from '@babel/runtime/helpers/esm/extends';
import _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';
import { jsx } from '@emotion/core';
import { shadows, borderRadius, gridSize } from '@arch-ui/theme';

// Card
// ==============================

const Card = (_ref) => {
  let {
    as: Tag,
    elevation,
    isInteractive,
    isPadded
  } = _ref,
      props = _objectWithoutProperties(_ref, ["as", "elevation", "isInteractive", "isPadded"]);

  const shadow = shadows[elevation];
  return jsx(Tag, _extends({
    css: {
      background: 'white',
      borderRadius: borderRadius,
      boxShadow: shadow,
      padding: isPadded ? gridSize * 2 : null,
      transition: "box-shadow 111ms ease-out, transform 111ms ease-out",
      ':hover': isInteractive ? {
        boxShadow: shadows[elevation + 1],
        transform: 'translateY(-2px)'
      } : null,
      ':active': isInteractive ? {
        boxShadow: shadow,
        transform: 'none'
      } : null
    }
  }, props));
};
Card.defaultProps = {
  as: 'div',
  elevation: 0,
  isPadded: true
}; // ==============================
// Canvas
// ==============================

const Canvas = (_ref2) => {
  let {
    as: Tag,
    isPadded
  } = _ref2,
      props = _objectWithoutProperties(_ref2, ["as", "isPadded"]);

  return jsx(Tag, _extends({
    css: {
      background: "rgba(9, 30, 66, 0.04)",
      borderRadius: borderRadius * 2,
      padding: isPadded ? gridSize : null
    }
  }, props));
};
Canvas.defaultProps = {
  as: 'div',
  isPadded: true
};

export { Canvas, Card };
