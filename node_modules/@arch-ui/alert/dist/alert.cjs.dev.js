'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var styled = _interopDefault(require('@emotion/styled'));
var theme = require('@arch-ui/theme');

const boldBackgroundColor = {
  info: theme.colors.primary,
  success: theme.colors.create,
  warning: theme.colors.warning,
  danger: theme.colors.danger
};
const boldTextColor = {
  info: 'white',
  success: 'white',
  warning: 'white',
  danger: 'white'
};
const subtleBackgroundColor = {
  info: theme.colors.B.L80,
  success: theme.colors.G.L80,
  warning: theme.colors.Y.L80,
  danger: theme.colors.R.L80
};
const subtleTextColor = {
  info: theme.colors.B.D20,
  success: theme.colors.G.D20,
  warning: theme.colors.Y.D20,
  danger: theme.colors.R.D20
};
const Alert = styled.div((_ref) => {
  let {
    appearance,
    variant
  } = _ref;
  return {
    backgroundColor: variant === 'bold' ? boldBackgroundColor[appearance] : subtleBackgroundColor[appearance],
    color: variant === 'bold' ? boldTextColor[appearance] : subtleTextColor[appearance],
    borderRadius: theme.borderRadius,
    display: 'flex',
    fontWeight: variant === 'bold' ? 500 : null,
    minWidth: 1,
    padding: '0.9em 1.2em',
    margin: '0.9em 0',
    '& a': {
      color: variant === 'bold' ? boldTextColor[appearance] : subtleTextColor[appearance],
      textDecoration: 'underline'
    }
  };
});
Alert.defaultProps = {
  appearance: 'info',
  variant: 'subtle'
};

exports.Alert = Alert;
