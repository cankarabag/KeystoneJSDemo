import _extends from '@babel/runtime/helpers/esm/extends';
import { jsx } from '@emotion/core';
import { gridSize, colors } from '@arch-ui/theme';
import { ShieldIcon } from '@arch-ui/icons';
import { Lozenge } from '@arch-ui/lozenge';

const FieldContainer = props => jsx("div", _extends({
  "data-selector": "field-container",
  css: {
    marginBottom: gridSize * 2
  }
}, props));
const FieldLabel = props => {
  const accessError = (props.errors || []).find(error => error instanceof Error && error.name === 'AccessDeniedError');
  return jsx("label", {
    css: {
      color: colors.N60,
      fontSize: '0.9rem',
      fontWeight: 500,
      paddingBottom: gridSize,
      display: 'flex',
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    htmlFor: props.htmlFor
  }, props.field.label, ' ', accessError ? jsx(ShieldIcon, {
    title: accessError.message,
    css: {
      color: colors.N20,
      marginRight: '1em'
    }
  }) : null, ' ', props.field.config.isRequired ? jsx(Lozenge, {
    appearance: "primary"
  }, " Required ") : null);
};
const FieldDescription = props => jsx("p", _extends({
  css: {
    margin: '0 0 8px',
    color: colors.N60,
    fontSize: '0.9rem'
  }
}, props));
const FieldInput = props => jsx("div", _extends({
  css: {
    display: 'flex'
  }
}, props));
const Currency = props => jsx("span", _extends({
  css: {
    alignContent: 'center',
    backgroundColor: colors.N10,
    border: '1px solid transparent',
    borderBottomRightRadius: 0,
    borderColor: colors.N20,
    borderRadius: 4,
    borderRight: 0,
    borderTopRightRadius: 0,
    display: 'flex',
    fontSize: '0.9rem',
    marginRight: -2,
    padding: 10
  }
}, props));

export { Currency, FieldContainer, FieldDescription, FieldInput, FieldLabel };
