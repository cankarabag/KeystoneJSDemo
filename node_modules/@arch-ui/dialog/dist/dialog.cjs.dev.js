'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _defineProperty = _interopDefault(require('@babel/runtime/helpers/defineProperty'));
var React = require('react');
var React__default = _interopDefault(React);
var reactDom = require('react-dom');
var ScrollLock = _interopDefault(require('react-scrolllock'));
var reactFocusMarshal = require('react-focus-marshal');
var modalUtils = require('@arch-ui/modal-utils');
var typography = require('@arch-ui/typography');
var _extends = _interopDefault(require('@babel/runtime/helpers/extends'));
var _objectWithoutProperties = _interopDefault(require('@babel/runtime/helpers/objectWithoutProperties'));
var core = require('@emotion/core');
var styled = _interopDefault(require('@emotion/styled'));
var theme = require('@arch-ui/theme');
var colorUtils = require('@arch-ui/color-utils');

const outerGutter = 40;
const innerGutter = 20;
const Positioner = styled.div((_ref) => {
  let {
    width
  } = _ref;
  return {
    display: 'flex',
    flexDirection: 'column',
    left: 0,
    marginLeft: 'auto',
    marginRight: 'auto',
    maxHeight: "calc(100% - ".concat(outerGutter * 2, "px)"),
    maxWidth: width,
    position: 'fixed',
    right: 0,
    top: outerGutter,
    zIndex: 2
  };
});
const Dialog = React.forwardRef((_ref2, ref) => {
  let {
    component: Tag
  } = _ref2,
      props = _objectWithoutProperties(_ref2, ["component"]);

  return core.jsx(Tag, _extends({
    ref: ref,
    role: "dialog",
    css: {
      backgroundColor: 'white',
      borderRadius: 5,
      boxShadow: '0 2px 8px -1px rgba(0,0,0,0.3)',
      display: 'flex',
      flex: 1,
      flexDirection: 'column',
      maxHeight: '100%'
    }
  }, props));
});
const HeadFoot = styled.div({
  lineHeight: 1,
  margin: "0 ".concat(innerGutter, "px"),
  paddingBottom: innerGutter,
  paddingTop: innerGutter,
  // ensure that box-shadow covers body content
  position: 'relative',
  zIndex: 1
});
const Header = styled(HeadFoot)({
  boxShadow: "0 2px 0 ".concat(colorUtils.alpha(theme.colors.text, 0.12))
});
const Footer = styled(HeadFoot)({
  boxShadow: "0 -2px 0 ".concat(colorUtils.alpha(theme.colors.text, 0.12))
});
const Title = styled.h3({
  fontSize: 18,
  fontWeight: 500,
  margin: 0
});
const Body = styled.div({
  lineHeight: 1.4,
  overflowY: 'auto',
  padding: innerGutter
});

class ModalDialog extends React.PureComponent {
  constructor() {
    super(...arguments);

    _defineProperty(this, "onKeyDown", e => {
      if (this.props.onKeyDown) this.props.onKeyDown(e);
    });
  }

  componentDidMount() {
    document.addEventListener('keydown', this.onKeyDown, false);
  }

  componentWillUnmount() {
    document.removeEventListener('keydown', this.onKeyDown, false);
  }

  render() {
    const {
      attachTo,
      children,
      closeOnBlanketClick,
      component,
      footer,
      heading,
      initialFocus,
      onClose,
      width,
      transitionState
    } = this.props;
    const dialogTitleId = modalUtils.generateUEID();

    if (!attachTo) {
      return null;
    }

    return reactDom.createPortal(React__default.createElement(React.Fragment, null, React__default.createElement(modalUtils.Blanket, {
      style: modalUtils.fade(transitionState),
      onClick: closeOnBlanketClick ? onClose : undefined,
      isTinted: true
    }), React__default.createElement(Positioner, {
      style: modalUtils.slideUp(transitionState),
      width: width
    }, React__default.createElement(reactFocusMarshal.FocusTrap, {
      options: {
        initialFocus,
        clickOutsideDeactivates: closeOnBlanketClick
      }
    }, React__default.createElement(Dialog, {
      component: component,
      "aria-labelledby": dialogTitleId
    }, React__default.createElement(typography.A11yText, {
      id: dialogTitleId
    }, heading, " Dialog"), heading ? React__default.createElement(Header, null, React__default.createElement(Title, null, heading)) : null, React__default.createElement(Body, null, children), footer ? React__default.createElement(Footer, null, footer) : null))), React__default.createElement(ScrollLock, null)), attachTo);
  }

}

_defineProperty(ModalDialog, "defaultProps", {
  attachTo: typeof document !== 'undefined' ? document.body : null,
  closeOnBlanketClick: false,
  component: 'div',
  width: 640
});

var Dialog$1 = modalUtils.withTransitionState(ModalDialog);

exports.default = Dialog$1;
