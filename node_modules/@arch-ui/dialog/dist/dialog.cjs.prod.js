"use strict";

function _interopDefault(ex) {
  return ex && "object" == typeof ex && "default" in ex ? ex.default : ex;
}

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _defineProperty = _interopDefault(require("@babel/runtime/helpers/defineProperty")), React = require("react"), React__default = _interopDefault(React), reactDom = require("react-dom"), ScrollLock = _interopDefault(require("react-scrolllock")), reactFocusMarshal = require("react-focus-marshal"), modalUtils = require("@arch-ui/modal-utils"), typography = require("@arch-ui/typography"), _extends = _interopDefault(require("@babel/runtime/helpers/extends")), _objectWithoutProperties = _interopDefault(require("@babel/runtime/helpers/objectWithoutProperties")), core = require("@emotion/core"), styled = _interopDefault(require("@emotion/styled")), theme = require("@arch-ui/theme"), colorUtils = require("@arch-ui/color-utils");

const outerGutter = 40, innerGutter = 20, Positioner = styled.div(_ref => {
  let {width: width} = _ref;
  return {
    display: "flex",
    flexDirection: "column",
    left: 0,
    marginLeft: "auto",
    marginRight: "auto",
    maxHeight: "calc(100% - ".concat(80, "px)"),
    maxWidth: width,
    position: "fixed",
    right: 0,
    top: 40,
    zIndex: 2
  };
}), Dialog = React.forwardRef((_ref2, ref) => {
  let {component: Tag} = _ref2, props = _objectWithoutProperties(_ref2, [ "component" ]);
  return core.jsx(Tag, _extends({
    ref: ref,
    role: "dialog",
    css: {
      backgroundColor: "white",
      borderRadius: 5,
      boxShadow: "0 2px 8px -1px rgba(0,0,0,0.3)",
      display: "flex",
      flex: 1,
      flexDirection: "column",
      maxHeight: "100%"
    }
  }, props));
}), HeadFoot = styled.div({
  lineHeight: 1,
  margin: "0 ".concat(20, "px"),
  paddingBottom: 20,
  paddingTop: 20,
  position: "relative",
  zIndex: 1
}), Header = styled(HeadFoot)({
  boxShadow: "0 2px 0 ".concat(colorUtils.alpha(theme.colors.text, .12))
}), Footer = styled(HeadFoot)({
  boxShadow: "0 -2px 0 ".concat(colorUtils.alpha(theme.colors.text, .12))
}), Title = styled.h3({
  fontSize: 18,
  fontWeight: 500,
  margin: 0
}), Body = styled.div({
  lineHeight: 1.4,
  overflowY: "auto",
  padding: 20
});

class ModalDialog extends React.PureComponent {
  constructor() {
    super(...arguments), _defineProperty(this, "onKeyDown", e => {
      this.props.onKeyDown && this.props.onKeyDown(e);
    });
  }
  componentDidMount() {
    document.addEventListener("keydown", this.onKeyDown, !1);
  }
  componentWillUnmount() {
    document.removeEventListener("keydown", this.onKeyDown, !1);
  }
  render() {
    const {attachTo: attachTo, children: children, closeOnBlanketClick: closeOnBlanketClick, component: component, footer: footer, heading: heading, initialFocus: initialFocus, onClose: onClose, width: width, transitionState: transitionState} = this.props, dialogTitleId = modalUtils.generateUEID();
    return attachTo ? reactDom.createPortal(React__default.createElement(React.Fragment, null, React__default.createElement(modalUtils.Blanket, {
      style: modalUtils.fade(transitionState),
      onClick: closeOnBlanketClick ? onClose : void 0,
      isTinted: !0
    }), React__default.createElement(Positioner, {
      style: modalUtils.slideUp(transitionState),
      width: width
    }, React__default.createElement(reactFocusMarshal.FocusTrap, {
      options: {
        initialFocus: initialFocus,
        clickOutsideDeactivates: closeOnBlanketClick
      }
    }, React__default.createElement(Dialog, {
      component: component,
      "aria-labelledby": dialogTitleId
    }, React__default.createElement(typography.A11yText, {
      id: dialogTitleId
    }, heading, " Dialog"), heading ? React__default.createElement(Header, null, React__default.createElement(Title, null, heading)) : null, React__default.createElement(Body, null, children), footer ? React__default.createElement(Footer, null, footer) : null))), React__default.createElement(ScrollLock, null)), attachTo) : null;
  }
}

_defineProperty(ModalDialog, "defaultProps", {
  attachTo: "undefined" != typeof document ? document.body : null,
  closeOnBlanketClick: !1,
  component: "div",
  width: 640
});

var Dialog$1 = modalUtils.withTransitionState(ModalDialog);

exports.default = Dialog$1;
