import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';
import { lighten, darken, alpha } from '@arch-ui/color-utils';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const intent = {
  create: '#34c240',
  danger: '#d64242',
  info: '#0090e0',
  primary: '#2684FF',
  warning: '#fa9f47'
}; // neutrals

const neutrals = {
  N05: '#F4F5F7',
  N10: '#EBECF0',
  N15: '#DFE1E5',
  N20: '#C1C7D0',
  N30: '#A5ADBA',
  N40: '#97A0AF',
  N50: '#7A869A',
  N60: '#6C798F',
  N70: '#42526E',
  N80: '#253858',
  N90: '#172B4D',
  N100: '#091E42'
};
const source = Array.from(new Array(19), (item, index) => (index + 1) * 5);
const darkenSource = source.slice(0, 16).reverse(); // darker than D80 is basically black...

function makeVariants(color) {
  const variants = {};
  source.forEach(n => variants["L".concat(n)] = lighten(color, n));
  variants.base = color;
  darkenSource.forEach(n => variants["D".concat(n)] = darken(color, n));
  source.forEach(n => variants["A".concat(n)] = alpha(color, n / 100));
  return variants;
}

const blue = '#2684FF';
const green = '#34c240';
const red = '#d64242';
const yellow = '#fa9f47'; // const neutral = '#7A869A';

const blues = makeVariants(blue);
const greens = makeVariants(green);
const reds = makeVariants(red);
const yellows = makeVariants(yellow); // const neutrals = makeVariants(neutral);

var colors = _objectSpread({
  R: reds,
  G: greens,
  B: blues,
  Y: yellows
}, neutrals, {
  // named
  page: '#FAFBFC',
  text: neutrals.N90
}, intent, {
  green,
  red,
  blue,
  yellow
});

const shade = alpha => "rgba(9, 30, 66, ".concat(alpha, ")");

const shadows = ["0px 2px 5px 0px ".concat(shade(0.12)), "0px 5px 10px 0px ".concat(shade(0.12)), "0px 6px 12px -2px ".concat(shade(0.12), ", 0 0 0 1px ").concat(shade(0.08)), "0px 6px 12px -2px ".concat(shade(0.24), ", 0 0 0 1px ").concat(shade(0.08))];

const fontFamily = "\n  -apple-system,\n  BlinkMacSystemFont,\n  \"Segoe UI\",\n  Roboto,\n  Helvetica,\n  Arial,\n  sans-serif,\n  \"Apple Color Emoji\",\n  \"Segoe UI Emoji\",\n  \"Segoe UI Symbol\"\n";
const borderRadius = 6;
const gridSize = 8;
const fontSize = 16;
const globalStyles = {
  body: {
    backgroundColor: colors.page,
    color: colors.text,
    fontFamily: fontFamily,
    fontSize,
    letterSpacing: '-0.005em',
    margin: 0,
    textDecorationSkip: 'ink',
    textRendering: 'optimizeLegibility',
    msOverflowStyle: '-ms-autohiding-scrollbar',
    MozFontFeatureSettings: "'liga' on",
    MozOsxFontSmoothing: 'grayscale',
    WebkitFontSmoothing: 'antialiased'
  },
  a: {
    color: colors.primary,
    textDecoration: 'none'
  },
  'a:hover': {
    textDecoration: 'underline'
  }
};

export { borderRadius, colors, fontFamily, fontSize, globalStyles, gridSize, shadows };
