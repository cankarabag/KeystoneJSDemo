"use strict";

function _interopDefault(ex) {
  return ex && "object" == typeof ex && "default" in ex ? ex.default : ex;
}

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _extends = _interopDefault(require("@babel/runtime/helpers/extends")), _objectWithoutProperties = _interopDefault(require("@babel/runtime/helpers/objectWithoutProperties")), core = require("@emotion/core"), react = require("react"), reactRadios = require("react-radios"), theme = require("@arch-ui/theme"), controls = require("@arch-ui/controls"), layout = require("@arch-ui/layout");

const ControlLabel = _ref => {
  let props = _objectWithoutProperties(_ref, [ "isChecked", "isDisabled" ]);
  const borderRadius = "checkbox" === react.Children.toArray(props.children)[0].props.type ? 3 : "2em";
  return core.jsx("label", _extends({
    css: {
      alignItems: "center",
      border: "1px solid ".concat(theme.colors.N10),
      borderRadius: borderRadius,
      display: "flex",
      fontSize: "0.75em",
      fontWeight: 500,
      lineHeight: 1,
      transition: "border-color 150ms linear",
      width: "100%",
      userSelect: "none",
      ":hover, :focus": {
        borderColor: theme.colors.N20
      },
      ":active": {
        backgroundColor: theme.colors.N05
      }
    }
  }, props));
}, StretchGroup = props => core.jsx(layout.FlexGroup, _extends({
  stretch: !0
}, props)), CheckboxGroup = props => core.jsx(reactRadios.CheckboxGroup, _extends({
  component: StretchGroup
}, props)), ButtonCheckbox = props => core.jsx(controls.CheckboxPrimitive, _extends({
  components: {
    Label: ControlLabel
  }
}, props)), Checkbox = props => core.jsx(reactRadios.Checkbox, _extends({
  component: ButtonCheckbox
}, props)), RadioGroup = props => core.jsx(reactRadios.RadioGroup, _extends({
  component: StretchGroup
}, props)), ButtonRadio = props => core.jsx(controls.RadioPrimitive, _extends({
  components: {
    Label: ControlLabel
  }
}, props)), Radio = props => core.jsx(reactRadios.Radio, _extends({
  component: ButtonRadio
}, props));

exports.Checkbox = Checkbox, exports.CheckboxGroup = CheckboxGroup, exports.Radio = Radio, 
exports.RadioGroup = RadioGroup;
